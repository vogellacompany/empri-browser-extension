# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3.8'
networks:
  backend:
   name: app
   driver: bridge
volumes:
  postgres-data:
# Define services
services:
  # App backend service
  app:
    image: empri-browser-plugin-server/app:latest
    # Give the container the name web-app. You can changes to something else.
    container_name: web-app
    restart: always
    # Forward the exposed port 5555 on the container to localhost on port 5005 on the host machine
    ports:
      - "127.0.0.1:5005:5555"
    networks:
      - backend
    # This service depends on postgres. Start that first.
    depends_on:
      - db
    # Service health check, deactivated since Spring Boot container don't contain curl or netcat
    # healthcheck:
    #   test: curl -f http://localhost:5005/health_check || exit 1
    #   interval: 1m
    #   timeout: 10s
    #   retries: 2
    environment:
      - BROWSER_USER
      - BROWSER_PASSWORD
      - PSQL_USERNAME
      - PSQL_PASSWORD
      - PSQL_DB_NAME
  # Database Service (Postgres)
  db:
    # Use the Docker Image postgres. This will pull the 13 version.
    image: postgres:13
    # Give the container the name postgres-db. You can changes to something else.
    container_name: postgres-db
    restart: always
    # Set a volume some that database is not lost after shutting down the container.
    # I used the name postgres-data but you can changed it to something else.
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend
    # Maps port 5432 (localhost) to port 5432 on the container. You can change the ports to fix your needs.
    # ports:
    #   - "127.0.0.1:5432:5432"
    # Setup the username, password, and database name. You can changes these values.
    environment:
      POSTGRES_USER: ${PSQL_USERNAME}
      POSTGRES_PASSWORD: ${PSQL_PASSWORD}
      POSTGRES_DB: ${PSQL_DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    # Service health check
    healthcheck:
      test: pg_isready -U empri
      interval: 1m
      timeout: 10s
      retries: 2
